{
  "schema": "http://json-schema.org/draft-07/schema#",
  "title": "PIF",
  "description": "This schema defines the data model for the Parsons Problems Input File.",

  "definitions": {
    "nonempty_string": {
      "$id": "nonempty_string",
      "type": "string",
      "minLength": 1
    },
    "char": {
      "$id": "char",
      "type": "string",
      "minLength": 1,
      "maxLength": 1
    },
    "string_number": {
      "$id": "string_number",
      "type": "string",
      "pattern": "^\\d+$"
    },
    "id": {
      "$id": "id",
      "description": "An id is a non-empty string containing no whitespace.",
      "$ref": "#/definitions/nonempty_string",
      "pattern": "^[^\\s]+$"
    },
    "email_address": {
      "$id": "email_address",
      "description": "An email_address is a non-empty string conforming to the idn-email format.",
      "$ref": "#/definitions/nonempty_string",
      "format": "idn-email"
    },
    "tag_list": {
      "$id": "tag_list",
      "description": "A single string representing a list of comma-delimited tags/elements",
      "type": "string",
      "pattern": "^[^\\s,]+(\\s*,\\s*[^\\s,]+)*$"
    },
    "block": {
      "$id": "block",
      "description": "An individual unit or entity that a student arranges or modifies in the Parsons Problem.",
      "type": "object",
      "required": ["display"],
      "properties": {
        "blockid": { "$ref": "#/definitions/nonempty_string" },
        "code": { "$ref": "#/definitions/nonempty_string" },
        "delimiter": { "$ref": "#/definitions/char" },
        "display": { "$ref": "#/definitions/nonempty_string" },
        "feedback": { "$ref": "#/definitions/nonempty_string" },
        "indent": { "$ref": "#/definitions/string_number" },
        "reusable": { "type": "boolean" },
        "depends": { "$ref": "#/definitions/tag_list" }
      }
    },
    "blocklist": {
      "$id": "blocklist",
      "description": "A group of related blocks.",
      "type": "object",
      "required": ["blocklist"],
      "properties": {
        "pickone": { "$ref": "#/definitions/nonempty_string" },
        "blockid": { "$ref": "#/definitions/nonempty_string" },
        "layout": { "enum": ["horizontal", "vertical"] },
        "delimiter": { "$ref": "#/definitions/char" },
        "blocklist": {
          "type": "array",
          "items": [{ "$ref": "#/definitions/block" }]
        }
      }
    }
  },

  "type": "object",
  "required": [
    "exercise_id",
    "title",
    "license",
    "tags",
    "instructions",
    "assets"
  ],
  "properties": {
    "exercise_id": { "$ref": "#/definitions/id" },
    "title": { "type": "string" },
    "license": {
      "type": "object",
      "required": ["id", "owner"],
      "properties": {
        "id": { "$ref": "#/definitions/nonempty_string" },
        "owner": {
          "type": "object",
          "required": ["email", "name"],
          "properties": {
            "email": { "$ref": "#/definitions/email_address" },
            "name": { "$ref": "#/definitions/nonempty_string" }
          }
        }
      }
    },
    "tags": {
      "type": "object",
      "required": ["style"],
      "properties": {
        "style": {
          "type": "string",
          "pattern": "parsons\\s*,\\s*(order|execute)(\\s*,\\s*indent)?$"
        },
        "topics": { "$ref": "#/definitions/nonempty_string" },
        "interface_layout": { "enum": ["horizontal", "vertical"] }
      }
    },
    "instructions": { "type": "string" },
    "systems": {
      "type": "array",
      "minItems": 1,
      "maxItems": 1,
      "items": {
        "type": "object",
        "required": ["language"],
        "properties": {
          "language": { "$ref": "#/definitions/nonempty_string" }
        }
      }
    },
    "numbered": { "type": "boolean" },
    "assets": {
      "type": "object",
      "properties": {
        "code": {
          "type": "object",
          "properties": {
            "wrapper": {
              "type": "object",
              "properties": {
                "files": {
                  "type": "array",
                  "minItems": 1,
                  "maxItems": 1,
                  "items": {
                    "required": ["content"],
                    "properties": {
                      "content": { "$ref": "#/definitions/nonempty_string" }
                    }
                  }
                }
              }
            },
            "starter": {
              "type": "object",
              "properties": {
                "files": {
                  "type": "array",
                  "minItems": 1,
                  "maxItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "delimiter": { "$ref": "#/definitions/char" },
                      "content": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "if": {
                            "type": "object",
                            "required": ["blocklist"]
                          },
                          "then": {
                            "$ref": "#/definitions/blocklist"
                          },
                          "else": {
                            "$ref": "#/definitions/block"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "test": {
          "type": "object",
          "properties": {
            "files": {
              "type": "array",
              "minItems": 1,
              "maxItems": 1,
              "items": {
                "properties": {
                  "format": { "$ref": "#/definitions/nonempty_string" },
                  "pattern_actual": { "$ref": "#/definitions/nonempty_string" },
                  "content": { "$ref": "#/definitions/nonempty_string" }
                }
              }
            }
          }
        }
      }
    }
  },

  "allOf": [
    {
      "if": {
        "properties": {
          "tags": {
            "properties": {
              "style": {
                "type": "string",
                "pattern": "^parsons\\s*,\\s*execute(\\s*,\\s*indent)?$"
              }
            }
          }
        }
      },
      "then": {
        "required": ["systems"]
      }
    },
    {
      "if": {
        "properties": {
          "tags": {
            "properties": {
              "style": {
                "type": "string",
                "pattern": "^parsons\\s*,\\s*(order|execute)\\s*,\\s*indent$"
              }
            }
          }
        }
      },
      "then": {
        "properties": {
          "assets": {
            "properties": {
              "code": {
                "properties": {
                  "starter": {
                    "properties": {
                      "files": {
                        "items": {
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": {
                                "if": {
                                  "type": "object",
                                  "required": ["blocklist"]
                                },
                                "then": {
                                  "properties": {
                                    "blocklist": {
                                      "type": "array",
                                      "items": {
                                        "required": ["indent"]
                                      }
                                    }
                                  }
                                },
                                "else": {
                                  "required": ["indent"]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ]
}
