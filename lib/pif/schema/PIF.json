{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Parsons Problems Input File (PIF) Schema",
  "description": "Schema defining the structure and validation rules for the Parsons Problems Input File.",

  "definitions": {
    "nonempty_string": {
      "type": "string",
      "minLength": 1,
      "description": "A non-empty string value."
    },
    "char": {
      "type": "string",
      "minLength": 1,
      "maxLength": 1,
      "description": "A single character string."
    },
    "string_number": {
      "type": "string",
      "pattern": "^\\d+$",
      "description": "Numeric value represented as a string."
    },
    "id": {
      "allOf": [
        { "$ref": "#/definitions/nonempty_string" },
        { "pattern": "^[^\\s]+$" }
      ],
      "description": "A unique identifier without whitespace."
    },
    "email_address": {
      "allOf": [
        { "$ref": "#/definitions/nonempty_string" },
        { "format": "idn-email" }
      ],
      "description": "Email address conforming to idn-email format."
    },
    "dependencies": {
      "type": "string",
      "pattern": "^([^\\s,]+(\\s*,\\s*[^\\s,]+)*)?$",
      "description": "Comma-separated tags or block IDs."
    },
    "block": {
      "type": "object",
      "required": ["display"],
      "description": "A single, arrangeable element in a Parsons Problem.",
      "properties": {
        "blockid": { "$ref": "#/definitions/nonempty_string" },
        "code": { "$ref": "#/definitions/nonempty_string" },
        "delimiter": { "$ref": "#/definitions/char" },
        "display": { "$ref": "#/definitions/nonempty_string" },
        "feedback": { "$ref": "#/definitions/nonempty_string" },
        "indent": { "$ref": "#/definitions/string_number" },
        "reusable": { "type": "boolean" },
        "depends": { "$ref": "#/definitions/dependencies" }
      }
    },
    "blocklist": {
      "type": "object",
      "required": ["blocklist"],
      "description": "A collection of related blocks.",
      "properties": {
        "depends": { "$ref": "#/definitions/dependencies" },
        "pickone": { "type": "boolean" },
        "blockid": { "$ref": "#/definitions/nonempty_string" },
        "layout": { "enum": ["horizontal", "vertical"] },
        "delimiter": { "$ref": "#/definitions/char" },
        "blocklist": {
          "type": "array",
          "items": { "$ref": "#/definitions/block" }
        }
      }
    }
  },

  "type": "object",
  "required": [
    "exercise_id",
    "title",
    "license",
    "tags",
    "instructions",
    "assets"
  ],
  "properties": {
    "exercise_id": { "$ref": "#/definitions/id" },
    "title": { "$ref": "#/definitions/nonempty_string" },
    "license": {
      "type": "object",
      "required": ["id", "owner"],
      "properties": {
        "id": { "$ref": "#/definitions/nonempty_string" },
        "owner": {
          "type": "object",
          "required": ["email", "name"],
          "properties": {
            "email": { "$ref": "#/definitions/email_address" },
            "name": { "$ref": "#/definitions/nonempty_string" }
          }
        }
      }
    },
    "tags": {
      "type": "object",
      "required": ["style"],
      "properties": {
        "style": {
          "type": "string",
          "pattern": "^parsons\\s*,\\s*(order|execute)(\\s*,\\s*indent)?$",
          "description": "Defines the Parsons Problem style, including 'order', 'execute', and optionally 'indent'."
        },
        "topics": { "$ref": "#/definitions/nonempty_string" },
        "interface_layout": { "enum": ["horizontal", "vertical"] }
      }
    },
    "instructions": { "$ref": "#/definitions/nonempty_string" },
    "systems": {
      "type": "array",
      "minItems": 1,
      "maxItems": 1,
      "items": {
        "type": "object",
        "required": ["language"],
        "properties": {
          "language": { "$ref": "#/definitions/nonempty_string" }
        }
      }
    },
    "numbered": { "type": "boolean" },
    "assets": {
      "type": "object",
      "required": ["code"],
      "properties": {
        "code": {
          "type": "object",
          "required": ["starter"],
          "properties": {
            "wrapper": {
              "type": "object",
              "required": ["files"],
              "properties": {
                "files": {
                  "type": "array",
                  "minItems": 1,
                  "maxItems": 1,
                  "items": {
                    "type": "object",
                    "required": ["content"],
                    "properties": {
                      "content": { "$ref": "#/definitions/nonempty_string" }
                    }
                  }
                }
              }
            },
            "starter": {
              "type": "object",
              "required": ["files"],
              "properties": {
                "files": {
                  "type": "array",
                  "minItems": 1,
                  "maxItems": 1,
                  "items": {
                    "type": "object",
                    "required": ["content"],
                    "properties": {
                      "delimiter": { "$ref": "#/definitions/char" },
                      "content": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "if": { "required": ["blocklist"] },
                          "then": { "$ref": "#/definitions/blocklist" },
                          "else": { "$ref": "#/definitions/block" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "test": {
          "type": "object",
          "properties": {
            "files": {
              "type": "array",
              "minItems": 1,
              "maxItems": 1,
              "items": {
                "type": "object",
                "required": ["format", "content"],
                "properties": {
                  "format": {
                    "type": "string",
                    "pattern": "^(text/csv|text/csv-unquoted)$"
                  },
                  "pattern_actual": { "$ref": "#/definitions/nonempty_string" },
                  "content": { "$ref": "#/definitions/nonempty_string" }
                }
              }
            }
          }
        }
      }
    }
  }
}
