exercise_id: https://codeworkout.cs.vt.edu/gym/exercises/265/practice?workout_id=48

title: Recursion Programming Exercise: GCD
external_id: RecC-Gcd
is_public: true
experience: 10
language_list: Java

license.id: cc-sa-4.0
license.owner.email: sallyhamouda@gmail.com
license.owner.name: sallyhamouda

tags.topics: recursion
tags.style: code writing

instructions:----------
The greatest common divisor (GCD) for a pair of numbers is\nthe largest
positive integer that divides both numbers\nwithout remainder. \nFor function
`GCD`, write the missing base case condition and action.\nThis function will
compute the greatest common divisor of `x` and `y`.\nYou can assume that `x`
and `y` are both positive integers and that\n`x > y`. Greatest common divisor
is computed as follows:<br>\n`GCD(x, 0) = x` and `GCD(x, y) = GCD(y, x % y)`.\n
----------

[systems]
language: Java

[assets.code.wrapper.files]
content:----------
public class RecCGcd
{
    ___
}
----------

[assets.code.starter.files]
content:----------
public int GCD(int x, int y) {
    if <<Missing base case condition>> {
      <<Missing base case action>>
    } else {
      return GCD(y, x % y);
    }
}
----------


[assets.test.files]
format: text/csv-unquoted
pattern_actual: subject.GCD({{x}}, {{y}})
content:----------
x,y,expected,description
6,4,2,example
27,9,9
25,5,5
128,6,2
28,7,7,hidden
240,8,8,hidden
2,1,1,hidden
----------

