exercise_id: https://codeworkout.cs.vt.edu/gym/exercises/829/practice?workout_id=1308

title: CodeWorkout LightBot Method Calls 10
external_id: CS1114_Week1SyntaxDrill10
is_public: true
experience: 50
language_list: Java

license.id: cc-sa-4.0
license.owner.email: edwards@cs.vt.edu
license.owner.name: Stephen H. Edwards

tags.topics: CS1114, LightBot, Methods, java
tags.style: code-writing

instructions:----------
For the question below, assume we are working with a simplified LightBot that can perform the following actions

*   Turn Left
*   Turn Right
*   Move Forward
*   Jump

Each of these actions is represented by a method call:

*   Turn Left --> `turnLeft()`
*   Turn Right --> `turnRight()`
*   Move Forward --> `moveForward()`
*   Jump --> `jump()`

Just like in the LightBot puzzles, there is also a method called `spin()` that causes the LightBot to turn left four times.

In the code below, remove the method call to `spin()`. Note, this does not mean to delete the whole `spin()` method, just the call to the method.
----------

[systems]
language: Java

[assets.code.wrapper.files]
content:----------
import java.util.ArrayList;
public class syntax10 {
    public static class SimpleLightBot {
        private ArrayList<String> moveHistory;

        public SimpleLightBot() {
            moveHistory = new ArrayList<String>();
        }

        public String[] getMoveHistory() {
            String[] a = new String[moveHistory.size()];
            return moveHistory.toArray(a);
        }

        public void jump() {
            moveHistory.add("jump");
        }

        public void turnLeft() {
            moveHistory.add("turnLeft");
        }

        public void turnRight() {
            moveHistory.add("turnRight");
        }

        public void moveForward() {
            moveHistory.add("moveForward");
        }


    }

    public static class Runner{
        ___
    }

}
----------
    


[assets.code.starter.files]
content:----------
public void spin(SimpleLightBot andy)
{
    andy.turnLeft();
    andy.turnLeft();
    andy.turnLeft();
    andy.turnLeft();
}

public void run(SimpleLightBot andy)
{
    spin(andy);
    andy.jump();
    andy.turnLeft();
}
----------

[assets.test.files]
format: java/junit
content:----------
import codeworkout.CodeWorkoutTest;
public class syntax10Test extends CodeWorkoutTest {
    private syntax10.SimpleLightBot testBot;
    private syntax10.Runner runner;

    public void setUp() {
        testBot = new syntax10.SimpleLightBot();
        runner = new syntax10.Runner();
    }

    public void testLightBotRun() {
        String[] expected = {"jump", "turnLeft"};
        runner.run(testBot);

        String[] testResult = testBot.getMoveHistory();

        assertEquals(expected.length, testResult.length);
        assertEquals(expected, testResult);
    }

    public void testSpinStillExists() {
        String[] expected = {"turnLeft", "turnLeft", "turnLeft", "turnLeft"};
        runner.spin(testBot);

        String[] testResult = testBot.getMoveHistory();

        assertEquals(expected.length, testResult.length);
        assertEquals(expected, testResult);
    }
}
----------